{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/resources/index.js","src/start/index.js","src/components/about/about.js","src/components/algorithmContainer/algorithm-container.js","src/components/algorithmContainer/boolean-format.js","src/components/asideInfo/aside-info.js","src/components/dependenciesContainer/dependencies-container.js","src/components/formContainer/form-container.js","src/components/algorithmContainer/algorithm/algorithm.js","src/components/algorithmContainer/algorithm/explainationText/explainLeftRightreduction.js"],"names":["App","configureRouter","config","router","this","options","root","title","handleUnknownRoutes","instruction","route","moduleId","mapUnknownRoutes","map","name","nav","debug","testing","configure","aurelia","use","standardConfiguration","feature","_environment2","default","developmentLogging","plugin","start","then","setRoot","Home","About","AlgorithmContainer","_aureliaFramework","inject","_algorithm","Algorithm","_aureliaRouter","Router","_class","algorithm","_classCallCheck","r","stepHeadline","question","answer","count","current","stepsLR","stepsRR","stepsEL","algoStep","AlgoStepEnum","LEFTREDUCTION","RIGHTREDUCTION","ELIMINATE","CONFLATE","getAttribute","step","forms","document","getElementsByClassName","i","length","left","firstChild","childNodes","j","right","lastChild","changeClassOldAttribute","undefined","className","includes","stepForward","do","log","steps","last","removed","confuateStep","conflated","createConflatedDependencies","removeConflatedDependencies","dependencies","parentNode","removeChild","conflate","splice","insert","getElementById","parent","dependency","createElement","classList","add","middle","middleText","createTextNode","appendChild","span","spanText","insertBefore","buttons","stepBack","lastStep","oldDomElem","domElem","replace","init","Array","prototype","lengthLeft","lengthRight","sum","setAttribute","toString","updateState","progressbarMax","parseInt","style","width","hideFormElements","flag","getElementsByTagName","remove","activate","params","routeConfig","json","JSON","parse","atob","base64","e","navigateToRoute","nextPressed","backPressed","toggleDescription","id","message","contains","resetPressed","endPressed","BooleanFormatValueConverter","toView","value","AsideInfo","DependenciesContainer","_aureliaEventAggregator","EventAggregator","eventAggregator","numAttributes","numDependencies","ea","subscribe","_this","response","adjustDependencyOptions","attr","dep","attributes","attributeArray","slice","containsClass","forEach","c","removeRotate","resetInput","checked","evaluateDependencies","error","result","lenght1","arrayLeft","arrayRight","leftInputs","lenght2","push","innerHTML","rightInputs","lenght3","display","btoa","stringify","FormContainer","numAttr","numDep","label","selectedAttr","selectedDep","nameAttr","rotate","publish","_explainLeftRightreduction","ExplainLeftRightreduction","explainLeftRightreduction","leftReduction","rightReduction","eliminate","confluate","console","warn","traverseDomTree","callback","domObj","l","formDeleted","leftSide","deleted","rightSide","containsOtherArray","arr1","arr2","every","indexOf","startingElements","elementsToFind","modifiedDom","a","siblingsDom","setStartingElements","elementsToFindDom","setElementsToFind","join","addedSomethingNew","tempAttr","pushConnection","reached","used","reachMessage","createExplainationTest","clear","elementToFind","startingElementsDom","oldRightSide","newRightSide","form","rightChildren","unique","concat","equals","x","newDom","entry","connections","connection"],"mappings":"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","file":"app-bundle-cff71d694f.js","sourceRoot":"..","sourcesContent":["export class App {\n  configureRouter(config, router) {\n    this.router = router;\n    // config.options.pushState = true; bc on thbruhn.de it's a singlepageapp\n    config.options.root = \"/\";\n    config.title = \"Synthese Algorithm\";\n\n    const handleUnknownRoutes = (instruction) => {\n      return { route: \"\", moduleId: \"start\" };\n    }\n    config.mapUnknownRoutes(handleUnknownRoutes);\n\n    config.map([\n      { route: \"\",             name: \"start\",       moduleId: \"start/index\", nav: true, title:\"Home\"},\n      { route: \"/about\",       name: \"about\",       moduleId: \"./components/about/about\", nav: true, title:\"About\"},\n      { route: \"/:base64\",    name: \"algorithm\",    moduleId: \"./components/algorithmContainer/algorithm-container\"}\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from \"./environment\";\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature(\"resources\");\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin(\"aurelia-testing\");\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class Home {\n  \n}","export class About {\n  \n}","import { Algorithm } from \"./algorithm/algorithm\";\nimport { Router } from \"aurelia-router\";\nimport { inject } from \"aurelia-framework\";\n\n@inject(Algorithm, Router)\nexport class AlgorithmContainer {\n\n  /**\n   * \n   * @param {*} algorithm \n   */\n  constructor(algorithm, router) {\n    this.r = router;\n    this.stepHeadline = \"Leftreduction\";\n    this.question = \"\";\n    this.answer;\n    this.count;\n    this.current;\n    this.algorithm = algorithm;\n    this.stepsLR = 0;\n    this.stepsRR = 0;\n    this.stepsEL = 0;\n    //this.stepsCF = 0;\n    this.algoStep = 1;\n    this.AlgoStepEnum = {\n      LEFTREDUCTION: 1,\n      RIGHTREDUCTION: 2,\n      ELIMINATE: 3,\n      CONFLATE: 4\n    };\n\n    /**\n     * gets current Attribute with the count\n     * as reference.\n     * @return {DomObject} current attribute\n     */\n    this.getAttribute = function () {\n      let step = 0;\n      let forms = document.getElementsByClassName(\"dependency\");\n\n      if (this.algoStep === this.AlgoStepEnum.LEFTREDUCTION) {\n        for (let i = 0; i < forms.length; i++) {\n          let left = forms[i].firstChild.childNodes;\n          for (let j = 0; j < left.length - 1; j++) {\n            if (this.count !== step) {\n              step += 1;\n            } else {\n              return left[j];\n            }\n          }\n        }\n      }\n\n      if (this.algoStep === this.AlgoStepEnum.RIGHTREDUCTION) {\n        let count = this.count - this.stepsLR;\n        for (let i = 0; i < forms.length; i++) {\n          let right = forms[i].lastChild.childNodes;\n          for (let j = 0; j < right.length - 1; j++) {\n            if (count !== step) {\n              step += 1;\n            } else {\n              return right[j];\n            }\n          }\n        }\n      }\n\n      if (this.algoStep === this.AlgoStepEnum.ELIMINATE) {\n        let count = this.count - this.stepsLR - this.stepsRR;\n        for (let i = 0; i < forms.length; i++) {\n          if (count !== step) {\n            step += 1;\n          } else {\n            return forms[i];\n          }\n        }\n      }\n\n      if (this.algoStep === this.AlgoStepEnum.CONFLATE) {\n        return forms;\n      }\n    };\n\n    //changes class of previous attribute, to not highlight it anymore\n    this.changeClassOldAttribute = function () {\n      if (this.current !== undefined) {\n        if (this.current.className.includes(\"dependency\")) {\n          if (this.current.className.includes(\"deleted\")) {\n            this.current.className = \"dependency deleted\";\n          } else {\n            this.current.className = \"dependency\";\n          }\n        } else {\n          if (this.current.className.includes(\"deleted\")) {\n            this.current.className = \"deleted\";\n          } else {\n            this.current.className = \"\";\n          }\n        }\n      }\n    };\n\n    this.stepForward = function () {\n      this.changeClassOldAttribute();\n      this.current = this.getAttribute();\n      this.current.className += \" current-attribute\";\n\n      const remove = this.algorithm.do(this.algoStep, this.current);\n\n      if (remove) {\n        this.current.className += \" deleted\";\n      }\n\n      this.question = this.algorithm.log.steps.last().question;\n      this.answer = this.algorithm.log.steps.last().removed;\n    };\n\n    this.confuateStep = function () {\n      const forms = this.getAttribute();\n      const conflated = this.algorithm.do(this.algoStep, forms);\n      this.question = this.algorithm.log.steps.last().question;\n      this.answer = this.algorithm.log.steps.last().removed;\n      this.createConflatedDependencies(conflated);\n    }\n\n    this.removeConflatedDependencies = function () {\n      //remove .dependency-final\n      const dependencies = document.getElementsByClassName(\"dependency-final\");\n      for (let i = dependencies.length - 1; i >= 0; --i) {\n        dependencies[i].parentNode.removeChild(dependencies[i]);\n      }\n      //remove all confalte logs\n      let step = this.algorithm.log.steps.last();\n      while(step.conflate) {\n        this.algorithm.log.steps.splice(-1, 1);\n        step = this.algorithm.log.steps.last();\n      } \n      this.question = step.question;\n      this.answer = step.removed;\n    }\n\n    this.createConflatedDependencies = function (dependencies) {\n      const insert = document.getElementById(\"buttons\");\n      const parent = insert.parentNode;\n\n      for (let i = 0; i < dependencies.length; i++) {\n        let dependency = document.createElement(\"form\");\n        dependency.classList.add(\"dependency\");\n        dependency.classList.add(\"dependency-final\");\n        let left = document.createElement(\"div\");\n        left.classList.add(\"left\")\n        let right = document.createElement(\"div\");\n        right.classList.add(\"right\");\n        let middle = document.createElement(\"div\");\n        middle.classList.add(\"middle\");\n        let middleText = document.createTextNode(\"->\");\n        middle.appendChild(middleText);\n        dependency.appendChild(left);\n        dependency.appendChild(middle);\n        dependency.appendChild(right);\n\n        for (let j = 0; j < dependencies[i].left.length; j++) {\n          let span = document.createElement(\"span\");\n          let spanText = document.createTextNode(dependencies[i].left[j]);\n          span.appendChild(spanText);\n          left.appendChild(span);\n        }\n\n        for (let j = 0; j < dependencies[i].right.length; j++) {\n          let span = document.createElement(\"span\");\n          let spanText = document.createTextNode(dependencies[i].right[j]);\n          span.appendChild(spanText);\n          right.appendChild(span);\n        }\n        parent.insertBefore(dependency, buttons);\n      }\n    }\n\n    this.stepBack = function () {\n      this.changeClassOldAttribute();\n      this.current = this.getAttribute();\n      const lastStep = this.algorithm.log.steps.last();\n      const oldDomElem = lastStep.domElem;\n\n      if (lastStep.removed) {\n        oldDomElem.className = oldDomElem.className.replace(\"deleted\", \"\");\n      }\n      this.algorithm.log.steps.splice(-1, 1);\n      this.question = this.algorithm.log.steps.last().question;\n      this.answer = this.algorithm.log.steps.last().removed;\n      this.current.className += \" current-attribute\";\n    };\n\n\n\n    /**\n     * Counts the number of steps needed for each state in the algorithm\n     * and sets right value for progressbar\n     * gets called when Class is created\n     */\n    this.init = function () {\n      if (!Array.prototype.last) {\n        Array.prototype.last = function () {\n          return this[this.length - 1];\n        };\n      };\n\n      let forms = document.getElementsByClassName(\"dependency\");\n      for (let i = 0; i < forms.length; i++) {\n        let lengthLeft = forms[i].firstChild.childNodes.length - 1;\n        for (let j = 0; j < lengthLeft; j++) {\n          this.stepsLR += 1;\n        }\n        let lengthRight = forms[i].lastChild.childNodes.length - 1;\n        for (let j = 0; j < lengthRight; j++) {\n          this.stepsRR += 1;\n        }\n        this.stepsEL += 1;\n      }\n      let sum = this.stepsLR + this.stepsRR + this.stepsEL;\n      document.getElementById(\"progress-outer\").setAttribute(\"data-max\", sum.toString());\n    };\n\n    /**\n     * Checks which step of the algorithm it is in\n     * Changes Headline if new step\n     */\n    this.updateState = function () {\n      const progressbarMax = parseInt(document.getElementById(\"progress-outer\").getAttribute(\"data-max\"));\n      document.getElementById(\"progress-inner\").style.width = ((this.count / progressbarMax) * 100).toString() + \"%\";\n\n      if (this.count < this.stepsLR) {\n        this.algoStep = 1;\n        this.stepHeadline = \"1: Leftreduction\";\n      } else if (this.count < (this.stepsRR + this.stepsLR)) {\n        this.algoStep = 2;\n        this.stepHeadline = \"2: Rightreduction\";\n      } else if (this.count < (this.stepsRR + this.stepsLR + this.stepsEL)) {\n        this.algoStep = 3;\n        this.stepHeadline = \"3: Eliminate\";\n      } else {\n        this.algoStep = 4;\n        this.stepHeadline = \"4: Confalte\";\n      }\n    };\n\n    this.hideFormElements = function (flag) {\n      const forms = document.getElementsByTagName(\"form\");\n      for (var i = 0; i < forms.length; i++) {\n        if (flag) {\n          forms[i].classList.add(\"hidden\");\n        } else {\n          forms[i].classList.remove(\"hidden\");\n        }\n      }\n    };\n  }\n\n  activate(params, routeConfig) {\n    try {\n      this.json = JSON.parse(atob(params.base64));\n    } catch (e) {\n      this.r.navigateToRoute(\"start\");\n    }\n    this.algorithm.log.steps = [];\n    // this.json = /*DUMMYDATA*/ {\"numAttributes\":6,\"dependencies\":[[[\"D\"],[\"B\",\"C\",\"D\",\"F\"]],[[\"B\",\"C\"],[\"A\",\"E\"]],[[\"A\",\"D\",\"E\"],[\"B\",\"C\"]],[[\"B\",\"F\"],[\"A\",\"D\"]],[[\"E\"],[\"F\"]]]};\n  }\n\n  //Executed when NextBtn is pressed\n  nextPressed() {\n    this.init();\n    this.count = 0;\n    this.updateState();\n    this.stepForward();\n\n    this.nextPressed = function () {\n      let sum = this.stepsLR + this.stepsRR + this.stepsEL;\n\n      if (this.count < sum - 1) {\n        this.count++;\n        this.updateState();\n        this.stepForward();\n        return;\n      }\n\n      if (this.count === sum - 1) {\n        //special case conflate\n        this.count++;\n        this.updateState();\n        this.hideFormElements(true);\n        this.confuateStep();\n      }\n\n    }\n  }\n\n  //Executed when BackBtn is pressed\n  backPressed() {\n    if (this.count !== undefined) {\n      let sum = this.stepsLR + this.stepsRR + this.stepsEL;\n      if (this.count === sum) {\n        //special case confluate\n        this.count--;\n        this.updateState();\n        this.removeConflatedDependencies();\n        this.hideFormElements(false);\n        return;\n      }\n\n      if (this.count > 0) {\n        this.count--;\n        this.updateState();\n        this.stepBack();\n      }\n    }\n  }\n\n  toggleDescription(id) {\n    id = \"message-\" + id;\n    let message = document.getElementById(id);\n    let details = message.getElementsByClassName(\"message-body\")\n\n    if (message.classList.contains(\"details\")) {\n      message.classList.remove(\"details\");\n    } else {\n      message.classList.add(\"details\");\n    }\n\n  }\n\n  resetPressed() {\n    while (this.count > 0) {\n      this.backPressed(); //genius\n    }\n  }\n\n  endPressed() {\n    this.nextPressed();\n    let sum = this.stepsLR + this.stepsRR + this.stepsEL;\n    while (this.count < sum) {\n      this.nextPressed();\n    }\n  }\n\n}\n","export class BooleanFormatValueConverter {\n  toView(value) {\n    let answer = '';\n    if(typeof value !== 'undefined') {\n      if(value) {\n        answer = 'Yes';\n      } else {\n        answer = 'No';\n      }\n    }\n    return answer;\n  }\n}","export class AsideInfo {\n  constructor() {\n  }\n}\n","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { Router } from 'aurelia-router';\n\n\n@inject(EventAggregator, Router)\nexport class DependenciesContainer {\n  constructor(eventAggregator, router) {\n    this.numAttributes;\n    this.numDependencies;\n    this.ea = eventAggregator;\n    this.r = router;\n    this.subscribe();\n  }\n\n  subscribe() {\n    this.ea.subscribe('numbers', response => {\n      this.adjustDependencyOptions(response.attr.id, response.dep.id);\n    });\n  }\n\n  /**\n   * Adjust form for entering dependencies\n   * @param {int} attr number of attributes shown in form\n   * @param {int} dep number of dependencies shown in form\n   */\n  adjustDependencyOptions(attr, dep) {\n    this.numDependencies = dep;\n    //console.log('adjustDependencyOptions');\n    let dependencies = document.getElementsByClassName('dependency');\n    let attributes = document.getElementsByClassName('attribute');\n    let attributeArray = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'].slice(0, attr);\n\n    for (let i = 0; i < dependencies.length; i++) {\n      if (parseInt(dependencies[i].id, 10) > dep) {\n        dependencies[i].classList.add('hidden');\n      } else {\n        dependencies[i].classList.remove('hidden');\n      }\n    }\n\n    for (let i = 0; i < attributes.length; i++) {\n      let containsClass = false;\n      attributeArray.forEach(function (c) {\n        containsClass = containsClass || attributes[i].classList.contains(c);\n      });\n\n      if (containsClass) {\n        attributes[i].parentNode.classList.remove('hidden');\n      } else {\n        attributes[i].parentNode.classList.add('hidden');\n      }\n    }\n    this.numAttributes = attr;\n  }\n\n  removeRotate() {\n    document.getElementsByClassName('form')[0].classList.remove('rotate');\n  }\n\n  /**\n   * Reset all radiobuttons\n   */\n  resetInput() {\n    const attributes = document.getElementsByClassName('attribute');\n    for (let i = 0, length = attributes.length; i < length; i++) {\n      attributes[i].checked = false;\n    }\n  }\n\n  /**\n   * Create JSON Object with the filled in Dependencies\n   * Example:\n   * AEH -> BD :: {id : {left: ['A', 'E', 'H'], right: ['B', 'D'] }}\n   */\n  evaluateDependencies() {\n    let error = false;\n    let result = {\n      'numAttributes': '',\n      'dependencies': []\n    };\n    const dependencies = document.getElementsByClassName('dependency');\n\n    for (let i = 0, lenght1 = this.numDependencies; i < lenght1; i++) {\n      let arrayLeft = [];\n      let arrayRight = [];\n\n      let leftInputs = dependencies[i].firstChild.childNodes;\n      for (let j = 0, lenght2 = leftInputs.length; j < lenght2; j++) {\n        if (leftInputs[j].firstChild.checked) {\n          arrayLeft.push(leftInputs[j].lastChild.innerHTML);\n        }\n      }\n      if (arrayLeft.length === 0) {\n        error = true;\n      }\n\n      let rightInputs = dependencies[i].lastChild.childNodes;\n      for (let j = 0, lenght3 = rightInputs.length; j < lenght3; j++) {\n        if (rightInputs[j].firstChild.checked) {\n          arrayRight.push(rightInputs[j].lastChild.innerHTML);\n        }\n      }\n      if (arrayRight.length === 0) {\n        error = true;\n      }\n\n      result.dependencies[i.toString()] = [arrayLeft, arrayRight];\n      result.numAttributes = this.numAttributes;\n    }\n    \n    if (error) {\n      document.getElementsByClassName('errormsg DC')[0].style.display = 'block';\n    } else {\n      document.getElementsByClassName('errormsg DC')[0].style.display = 'none';\n      this.r.navigateToRoute('algorithm', { base64: btoa(JSON.stringify(result)) });\n    }\n  }\n}\n","import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@inject(EventAggregator)\nexport class FormContainer {\n\n  constructor(eventAggregator) {\n    this.ea = eventAggregator;\n    this.numAttr = this.numDep = [\n      { id: 3, label: \"3\" },\n      { id: 4, label: \"4\" },\n      { id: 5, label: \"5\" },\n      { id: 6, label: \"6\" },\n      { id: 7, label: \"7\" },\n      { id: 8, label: \"8\" }\n    ];\n    this.selectedAttr;\n    this.selectedDep;\n    this.nameAttr;\n  }\n\n  rotate() {\n    if (!this.selectedAttr || !this.selectedDep) {\n      document.getElementsByClassName(\"errormsg FC\")[0].style.display = \"block\";\n    } else {\n      if ((2 < this.selectedAttr.id < 9) && (2 < this.selectedDep.id < 9)) {\n        this.ea.publish(\"numbers\", { \"attr\": this.selectedAttr, \"dep\": this.selectedDep });\n        document.getElementsByClassName(\"errormsg FC\")[0].style.display = \"none\";\n        document.getElementsByClassName(\"form\")[0].classList.add(\"rotate\");\n      }\n    }\n  }\n}\n","import { ExplainLeftRightreduction } from \"./explainationText/explainLeftRightreduction\";\nimport { inject } from \"aurelia-framework\";\n\n@inject(ExplainLeftRightreduction)\nexport class Algorithm {\n\n  constructor(ExplainLeftRightreduction) {\n    this.domElem;\n    this.explainLeftRightreduction = ExplainLeftRightreduction;\n    this.log = { \"steps\": [] };\n\n    this.stepBack = function () { };\n    this.do = function (step, domElem) {\n      this.domElem = domElem;\n      switch (step) {\n        case 1:\n          return this.leftReduction(domElem);\n        case 2:\n          return this.rightReduction(domElem);\n        case 3:\n          return this.eliminate(domElem);\n        case 4:\n          return this.confluate(domElem);\n        default:\n          console.warn(\"Wrong step number: \", step);\n      }\n    };\n\n    /**\n     * Traverses dom Tree and manipulates it with\n     * the callback the way it is needed for each step\n     * @param {function} callback should return false if domElem should not be in the returned \"Domtree\"\n     * @return Array of Objects {left: [], right: []} – Each Object represents dependencies\n     */\n    this.traverseDomTree = function (callback) {\n      const forms = document.getElementsByClassName(\"dependency\");\n      let domObj = [],\n        l = [],\n        r = [];\n\n      for (let i = 0; i < forms.length; i++) {\n        let formDeleted = forms[i].classList.contains(\"deleted\");\n        let leftSide = forms[i].firstChild.childNodes;\n        for (let j = 0; j < leftSide.length - 1; j++) {\n          let deleted = leftSide[j].className.includes(\"deleted\");\n          if (callback(leftSide[j]) && !deleted && !formDeleted) {\n            l.push(leftSide[j].innerHTML);\n          }\n        }\n        let rightSide = forms[i].lastChild.childNodes;\n        for (let j = 0; j < rightSide.length - 1; j++) {\n          let deleted = rightSide[j].className.includes(\"deleted\");\n          if (callback(rightSide[j]) && !deleted && !formDeleted) {\n            r.push(rightSide[j].innerHTML);\n          }\n        }\n        if(l.length > 0 && r.length > 0) {\n          domObj.push({ \"left\": l, \"right\": r, dependency: i+1 });\n        }\n        l = [];\n        r = [];\n      }\n      return domObj;\n    };\n\n    /**\n     * Helperfunction, that checks if all values from on array are in another array\n     * @param {Array} arr1 bigger array, that may contain arr2\n     * @param {Array} arr2 smaller array\n     * @return {bool} true if all values from arr2 are in arr1  \n     */\n    this.containsOtherArray = function (arr1, arr2) {\n      if (0 === arr2.length || 0 == arr1.length) {\n        return false;\n      }\n      return arr2.every(function (value) {\n        return (arr1.indexOf(value) >= 0);\n      });\n    };\n\n\n    /**\n     * Function for left reduction\n     * @param {DomElement} span selected Span\n     * @return {bool} true when span can be removed\n     */\n    this.leftReduction = function (span) {\n      let startingElements = [],\n          elementsToFind = [],\n          question = \"\",\n          modifiedDom = this.traverseDomTree((a) => { return true; });\n\n      //startingElements are siblings of the span\n      let siblingsDom = span.parentNode.childNodes;\n      for (let i = 0; i < siblingsDom.length - 1; i++) {\n        let deleted = siblingsDom[i].className.includes(\"deleted\");\n        if (siblingsDom[i].innerHTML !== span.innerHTML && !deleted) {\n          startingElements.push(siblingsDom[i].innerHTML);\n        }\n      }\n      this.explainLeftRightreduction.setStartingElements(startingElements);\n\n      //elementsToFind are right side of dependency\n      let elementsToFindDom = span.parentNode.parentNode.lastChild.childNodes;\n      for (let i = 0; i < elementsToFindDom.length - 1; i++) {\n        elementsToFind.push(elementsToFindDom[i].innerHTML);\n      }\n      this.explainLeftRightreduction.setElementsToFind(elementsToFind);\n\n      if (startingElements.length === 0) {\n        question = \"Can <b>\" + elementsToFind.join(\", \") + \" </b> be found with <b>∅</b>?\";\n      } else {\n        question = \"Can <b>\" + elementsToFind.join(\", \") + \"</b> be found with <b>\" + startingElements.join(\", \") + \"</b>?\";\n      }\n\n      let addedSomethingNew;\n      do {\n        addedSomethingNew = false;\n        for (let i = 0, length = modifiedDom.length; i < length; i++) {\n          let left = modifiedDom[i].left;\n          if (this.containsOtherArray(startingElements, left)) {\n            let tempAttr = [];\n            for (let l = 0; l < modifiedDom[i].right.length; l++) {\n              if (!startingElements.includes(modifiedDom[i].right[l])) {\n                startingElements.push(modifiedDom[i].right[l]);\n                tempAttr.push(modifiedDom[i].right[l]);\n                if (this.containsOtherArray(startingElements, elementsToFind)) {\n                  this.explainLeftRightreduction.pushConnection({\n                    \"reached\": tempAttr,\n                    \"used\": left,\n                    \"dependency\": modifiedDom[i].dependency\n                  });\n                  this.log.steps.push({\n                    \"domElem\": span,\n                    \"question\": question,\n                    \"removed\": true,\n                    \"reachMessage\": this.explainLeftRightreduction.createExplainationTest(),\n                  });\n                  return true;\n                } else {\n                  addedSomethingNew = true;\n                }\n              }\n            }\n            this.explainLeftRightreduction.pushConnection({\n              \"reached\": tempAttr,\n              \"used\": left,\n              \"dependency\": modifiedDom[i].dependency\n            });\n          }\n        }\n      } while (addedSomethingNew);\n\n      this.log.steps.push({\n        \"domElem\": span,\n        \"removed\": false,\n        \"question\": question,\n      });\n\n      this.explainLeftRightreduction.clear();\n      return false;\n    };\n\n    /**\n     * Function for right reduction\n     * @param {DomElement} span selected Span\n     * @return {bool} true when span can be removed\n     */\n    this.rightReduction = function (span) {\n      let startingElements = [],\n          elementToFind = span.innerHTML,\n          question = \"\",\n          modifiedDom = this.traverseDomTree((a) => {\n            return (span !== a);\n          });\n      this.explainLeftRightreduction.setElementsToFind([elementToFind]);\n\n\n      //starting elements are left side of dependency\n      let startingElementsDom = span.parentNode.parentNode.firstChild.childNodes;\n      for (let i = 0; i < startingElementsDom.length - 1; i++) {\n        if (startingElementsDom[i].innerHTML && !startingElementsDom[i].className.includes(\"deleted\")) {\n          startingElements.push(startingElementsDom[i].innerHTML);\n        }\n      }\n      this.explainLeftRightreduction.setStartingElements(startingElementsDom);\n\n      let oldRightSide = [];\n      for (let i = 0; i < span.parentNode.childNodes.length - 1; i++) {\n        if (!span.parentNode.childNodes[i].className.includes(\"deleted\")) {\n          oldRightSide.push(span.parentNode.childNodes[i].innerHTML);\n        }\n      }\n\n      let newRightSide = [];\n      for (let i = 0; i < span.parentNode.childNodes.length - 1; i++) {\n        if (span.parentNode.childNodes[i].innerHTML !== span.innerHTML\n          && !span.parentNode.childNodes[i].className.includes(\"deleted\")) {\n          newRightSide.push(span.parentNode.childNodes[i].innerHTML);\n        }\n      }\n\n      if (startingElementsDom.length === 0) {\n        question = \"Can <b>\" + elementToFind + \"</b> still be reached with \" + \"</b>∅ -> \" + newRightSide.join(\", \") + \" </b>&nbsp; instead of <b>\" + startingElements.join(\", \") + \" -> &nbsp;\" + oldRightSide.join(\", \") + \"</b>&nbsp; when you start with <b>\" + startingElements.join(\", \") + \"</b>?\";\n      } else if (oldRightSide.length === 1) {\n        question = \"Can <b>\" + elementToFind + \"</b> still be reached with \" + \"<b>\" + startingElements.join(\", \") + \" -> ∅</b>&nbsp; instead of <b>\" + startingElements.join(\", \") + \" -> &nbsp;\" + oldRightSide.join(\", \") + \"</b>&nbsp; when you start with <b>\" + startingElements.join(\", \") + \"</b>?\";\n      } else {\n        question = \"Can <b>\" + elementToFind + \"</b> still be reached with \" + \"<b>\" + startingElements.join(\", \") + \" -> \" + newRightSide.join(\", \") + \"</b>&nbsp; instead of <b>\" + startingElements.join(\", \") + \" -> &nbsp;\" + oldRightSide.join(\", \") + \"</b>&nbsp; when you start with <b>\" + startingElements.join(\", \") + \"</b>?\";\n      }\n\n      //check if element to find is alreade on left side\n      for(let i = 0; i<startingElements.length; i++) {\n        if (startingElements[i] === elementToFind) {\n          this.log.steps.push({\n            \"domElem\": span,\n            \"question\": question,\n            \"removed\": true,\n            \"reachMessage\": [elementToFind + \" was also on the left side of the dependency\"],\n          });\n          return true;\n        }\n      };\n\n      let addedSomethingNew;\n      do {\n        addedSomethingNew = false;\n        for (var i = 0; i < modifiedDom.length; i++) {\n          let left = modifiedDom[i].left;\n          if (this.containsOtherArray(startingElements, left)) {\n            let tempAttr = [];\n            for (let l = 0; l < modifiedDom[i].right.length; l++) {\n              if (!startingElements.includes(modifiedDom[i].right[l])) {\n                startingElements.push(modifiedDom[i].right[l]);\n                tempAttr.push(modifiedDom[i].right[l]);\n                if (startingElements.includes(elementToFind)) {\n                  this.explainLeftRightreduction.pushConnection({\n                    \"reached\": tempAttr,\n                    \"used\": left,\n                    \"dependency\": modifiedDom[i].dependency\n                  });\n                  this.log.steps.push({\n                    \"domElem\": span,\n                    \"question\": question,\n                    \"removed\": true,\n                    \"reachMessage\": this.explainLeftRightreduction.createExplainationTest(),\n                  });\n                  return true;\n                } else {\n                  addedSomethingNew = true;\n                }\n              }\n            }\n            this.explainLeftRightreduction.pushConnection({\n              \"reached\": tempAttr,\n              \"used\": left,\n              \"dependency\": modifiedDom[i].dependency\n            });\n          }\n        }\n      } while (addedSomethingNew);\n\n      this.log.steps.push({\n        \"domElem\": span,\n        \"question\": question,\n        \"removed\": false\n      });\n\n      this.explainLeftRightreduction.clear();\n      return false;\n    };\n\n    /**\n     * Function to eliminate\n     * eliminates when right side of form is empty\n     * @param {DomObject} form form that\"s checked\n     * @return {bool} true if can be removed\n     */\n    this.eliminate = function (form) {\n      let rightChildren = form.lastChild.childNodes;\n      for (let i = 0; i < rightChildren.length - 1; i++) {\n        if (!rightChildren[i].className.includes(\"deleted\")) {\n          this.log.steps.push({\n            \"domElem\": form,\n            \"question\": \"Are there no Attributes on the right side?\",\n            \"removed\": false\n          });\n          return false;\n        }\n      }\n      this.log.steps.push({\n        \"domElem\": form,\n        \"question\": \"Are there no Attributes on the right side?\",\n        \"removed\": true,\n        \"reachMessage\": [\"Dependency had no more Attributes on the right side\"]\n      });\n      return true;\n\n    };\n\n    /**\n     * Function to conflate\n     * combines dependencies if the left side is the same\n     * @param {json} dependencies that are checked\n     * @return {json} conflated dependencies \n     */\n    this.confluate = function (forms) {\n      // https://stackoverflow.com/questions/1584370/how-to-merge-two-arrays-in-javascript-and-de-duplicate-items\n      Array.prototype.unique = function () {\n        var a = this.concat();\n        for (var i = 0; i < a.length; ++i) {\n          for (var j = i + 1; j < a.length; ++j) {\n            if (a[i] === a[j])\n              a.splice(j--, 1);\n          }\n        }\n\n        return a;\n      };\n      Array.prototype.equals = function (a) {\n        if (a === this) return true;\n        if (a == null) return false;\n        if (a.length != this.length) return false;\n\n        for (var i = 0; i < a.length; ++i) {\n          if (a[i] !== this[i]) return false;\n        }\n        return true;\n      }\n\n      const modifiedDom = this.traverseDomTree((x) => { return true; });\n      var newDom = [];\n\n      for (let i = 0; i < modifiedDom.length; i++) {\n        let duplicate = false;\n        for (let j = 0; j < modifiedDom.length; j++) {\n          if (i !== j && (modifiedDom[i] !== undefined) && modifiedDom[j] !== undefined) {\n            if (modifiedDom[j].left.equals(modifiedDom[i].left)) {\n              duplicate = true;\n              let right = modifiedDom[j].right;\n              delete modifiedDom[j];\n              modifiedDom[i].right = modifiedDom[i].right.concat(right).unique();\n              this.log.steps.push({\n                \"domElem\": forms[j],\n                \"conflate\": true,\n                \"question\": \"Do two Dependencies have the same left side?\",\n                \"removed\": true,\n                \"reachMessage\": [(j + 1) + \". Dependency had the same Attributes on the left side as the \" + modifiedDom[i].dependency + \". Dependecy \"]\n              });\n            }\n          }\n        }\n      }\n      modifiedDom.forEach(entry => {\n        if(entry) {\n          newDom.push({\n            \"left\": entry.left,\n            \"right\": entry.right\n          })\n        }\n      }, this);\n      return newDom;\n    };\n  }\n}\n","export class ExplainLeftRightreduction {\n\n  /*\n   * connections = {\n   *    \"reached\",\n   *    \"used\",\n   *    \"dependency\"\n   *}\n   */\n  constructor() {\n      this.connections = [];\n      this.startingElements;\n      this.elementsToFind;\n  }\n\n  pushConnection(connection) {\n    this.connections.push(connection);\n  }\n\n  createExplainationTest() {\n   const result = [];\n\n   this.connections.forEach(entry => {\n     if(entry.reached.length > 0)\n        result.push(\"Reached \" + entry.reached.join(\", \") +  \" with \" +  entry.used.join(\", \") + \" in \" +  entry.dependency + \". Dependency\");\n   })\n\n    this.clear();\n    return result;\n  }\n\n  clear() {\n    this.connections = [];\n    this.elementsToFind = [];\n    this.startingElements = [];\n  }\n\n  setStartingElements(startingElements) {\n    this.startingElements = startingElements;\n  }\n\n  setElementsToFind(elementsToFind) {\n    this.elementsToFind = elementsToFind;\n  }\n}"]}